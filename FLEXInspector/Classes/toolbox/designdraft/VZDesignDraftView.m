//
//  VZDesignDraftView.m
//  APInspector
//
//  Created by John Wong on 12/1/16.
//  Copyright © 2016 Alipay. All rights reserved.
//

#import "VZDesignDraftView.h"
#import "VZPhotoScrollView.h"
#import "VZInspectorResource.h"

static NSString * const kVZDesignDraftImage = @"kVZDesignDraftImage";

@interface VZDesignDraftView () <UINavigationControllerDelegate, UIImagePickerControllerDelegate>

@end

@implementation VZDesignDraftView
{
    VZPhotoScrollView *_contentView;
    UIView *_headerView;
    UIColor *_originalWindowColor;
    BOOL *_isEditMode;
    UIStepper *_alphaEdit;
}

- (instancetype)initWithFrame:(CGRect)frame
{
    self = [super initWithFrame:frame];
    if (self) {
        
        _contentView = [[VZPhotoScrollView alloc] initWithFrame:self.bounds];
        _contentView.alpha = 0.45;
        [self addSubview:_contentView];
        
        _headerView = [[UIView alloc] initWithFrame:CGRectMake(0, 0, frame.size.width, 32)];
        [self addSubview:_headerView];
        
        UIButton *_backBtn = [[UIButton alloc]initWithFrame:CGRectMake(10, 0, 44, _headerView.frame.size.height)];
        _backBtn.backgroundColor = [UIColor clearColor];
        [_backBtn setTitle:@"<-" forState:UIControlStateNormal];
        [_backBtn setTitleColor:[UIColor orangeColor] forState:UIControlStateNormal];
        _backBtn.titleLabel.font = [UIFont systemFontOfSize:18.0f];
        [_backBtn addTarget:self action:@selector(pop) forControlEvents:UIControlEventTouchUpInside];
        [_headerView addSubview:_backBtn];
        
        UIButton *selPicButton = [[UIButton alloc] initWithFrame:CGRectMake(_backBtn.frame.origin.x + _backBtn.frame.size.width + 8, 0, 44, _headerView.frame.size.height)];
        selPicButton.backgroundColor = [UIColor clearColor];
        [selPicButton setTitle:@"选图" forState:UIControlStateNormal];
        [selPicButton setTitleColor:[UIColor orangeColor] forState:UIControlStateNormal];
        selPicButton.titleLabel.font = [UIFont systemFontOfSize:13.0f];
        [selPicButton addTarget:self action:@selector(selectPicture) forControlEvents:UIControlEventTouchUpInside];
        [_headerView addSubview:selPicButton];

        
        UISwitch *editSwitch = [[UISwitch alloc] init];
        editSwitch.frame = CGRectMake(selPicButton.frame.origin.x + selPicButton.frame.size.width + 8, 0, editSwitch.frame.size.width, editSwitch.frame.size.height);
        [editSwitch addTarget:self action:@selector(setEditMode:) forControlEvents:UIControlEventValueChanged];
        editSwitch.on = _isEditMode;
        editSwitch.tintColor = [UIColor orangeColor];
        editSwitch.onTintColor = [UIColor orangeColor];
        [_headerView addSubview:editSwitch];
        
        _alphaEdit = [[UIStepper alloc] init];
        _alphaEdit.tintColor = [UIColor orangeColor];
        _alphaEdit.hidden = !_isEditMode;
        _alphaEdit.frame = CGRectMake(editSwitch.frame.origin.x + editSwitch.frame.size.width + 8, 0, _alphaEdit.frame.size.width, _alphaEdit.frame.size.height);
        _alphaEdit.maximumValue = 1.0;
        _alphaEdit.minimumValue = 0;
        _alphaEdit.stepValue = 0.05;
        _alphaEdit.value = _contentView.alpha;
        [_alphaEdit addTarget:self action:@selector(alphaChanged:) forControlEvents:UIControlEventValueChanged];
        [_headerView addSubview:_alphaEdit];
        
    }
    return self;
}

- (void)alphaChanged:(UIStepper *)alphaEdit
{
    _contentView.alpha = alphaEdit.value;
}

- (void)setEditMode:(UISwitch *)sender
{
    _isEditMode = sender.isOn;
    _alphaEdit.hidden = !_isEditMode;
}

- (void)selectPicture
{
    UIImagePickerController *imagePickerController = [[UIImagePickerController alloc] init];
    imagePickerController.delegate = self;
    imagePickerController.allowsEditing = NO;
    imagePickerController.sourceType = UIImagePickerControllerSourceTypeSavedPhotosAlbum;
    [self.window.rootViewController presentViewController:imagePickerController animated:YES completion:nil];
}

- (void)imagePickerController:(UIImagePickerController *)picker didFinishPickingMediaWithInfo:(NSDictionary<NSString *,id> *)info
{
    [picker dismissViewControllerAnimated:YES completion:nil];
    UIImage *image = info[UIImagePickerControllerEditedImage] ? : info[UIImagePickerControllerOriginalImage];
    if (!image) {
        return;
    }
//    [[NSUserDefaults standardUserDefaults] setObject:info[UIImagePickerControllerReferenceURL] forKey:kVZDesignDraftImage];
//    [[NSUserDefaults standardUserDefaults] synchronize];
    [_contentView setImage:image];
}

- (void)imagePickerControllerDidCancel:(UIImagePickerController *)picker
{
    [picker dismissViewControllerAnimated:YES completion:nil];
}

- (BOOL)canTouchPassThrough:(CGPoint)pt {
    CGRect rect = _isEditMode ? self.frame : _headerView.frame;
    return !CGRectContainsPoint(rect, pt);
}

- (void)willMoveToWindow:(UIWindow *)newWindow
{
    if (newWindow) {
        _originalWindowColor = newWindow.backgroundColor;
        newWindow.backgroundColor = [UIColor clearColor];
    } else {
        self.window.backgroundColor = _originalWindowColor;
    }
}

+ (UIImage *)icon {
    u_int8_t bytes[] = {0x89,0x50,0x4E,0x47,0x0D,0x0A,0x1A,0x0A,0x00,0x00,0x00,0x0D,0x49,0x48,0x44,0x52,0x00,0x00,0x00,0x30,0x00,0x00,0x00,0x30,0x08,0x06,0x00,0x00,0x00,0x57,0x02,0xF9,0x87,0x00,0x00,0x02,0x19,0x49,0x44,0x41,0x54,0x68,0x43,0xED,0x59,0xED,0x55,0xC2,0x40,0x10,0x9C,0xAD,0x40,0xAD,0x40,0xE8,0x40,0x2B,0x50,0x2B,0x50,0x2B,0xC0,0x0E,0xD4,0x0A,0x58,0x2A,0x10,0x2B,0x50,0x2B,0x10,0x2B,0x50,0x2B,0x90,0x0E,0x84,0x0A,0xD4,0x0A,0xCE,0xB7,0x97,0x4B,0xCC,0x17,0x84,0xC0,0x1E,0x49,0xE4,0xF6,0x0F,0xF0,0x1E,0xE4,0x66,0x76,0xF6,0xEB,0x16,0x42,0xC7,0x8D,0x3A,0x8E,0x1F,0x81,0x40,0xD3,0x0A,0x06,0x05,0x5A,0xA9,0x80,0x61,0xF4,0x00,0xDC,0x01,0x38,0x02,0xEC,0xFB,0x26,0xED,0x1B,0xC0,0x1B,0x80,0x5B,0x62,0xCC,0xF2,0x40,0x0A,0x21,0xE4,0xC0,0x7F,0x00,0xD8,0x6F,0x12,0x75,0xC9,0xD9,0x42,0xE4,0x38,0x4F,0xA2,0x48,0x60,0x88,0x09,0x08,0xE7,0x2D,0x03,0x1F,0xC1,0x31,0x78,0xA1,0x11,0x2E,0xD2,0xD8,0xCA,0x14,0xF8,0x6A,0xA1,0xF7,0x63,0xCC,0x33,0x62,0xF4,0xAB,0x08,0x98,0xCC,0x17,0xB8,0xD9,0x5E,0x61,0x18,0x4B,0xF1,0x94,0x29,0xB0,0x1B,0x04,0x0C,0xDB,0x58,0xBC,0x06,0x70,0xEA,0x14,0x93,0x4A,0x71,0x4F,0x8C,0x89,0x66,0xFE,0x78,0x51,0xC0,0x30,0x1E,0x00,0x5C,0x2D,0x00,0x3A,0x22,0x06,0x6B,0x91,0x50,0x27,0xE0,0x3C,0xFF,0x5C,0x01,0xF0,0x8C,0xD8,0xD6,0xEE,0x8D,0xCD,0x07,0x01,0x01,0x76,0x52,0x81,0xEC,0x9D,0x38,0x09,0xAD,0x8D,0x48,0xF8,0x20,0x90,0x49,0xF2,0x45,0xE8,0x48,0xA9,0x7A,0x05,0x02,0x79,0x4F,0x9A,0x28,0xB6,0x3B,0x1D,0x42,0x52,0x3E,0xBB,0x9B,0xC4,0x76,0x24,0x61,0x3C,0x02,0x18,0xAC,0x5B,0x46,0x53,0xD3,0xAE,0xF4,0x10,0x99,0x30,0xA5,0xF4,0x96,0xF6,0x0F,0xF5,0x1C,0x88,0x41,0x9B,0xA8,0xCA,0x48,0xBD,0x8F,0xC3,0xE9,0x5D,0x3E,0x57,0x95,0x4F,0xC3,0xB6,0x7F,0x48,0x1F,0xC9,0xDB,0x65,0x19,0x09,0x6F,0x04,0xD6,0xA9,0x8D,0x4B,0xC0,0xCB,0xE3,0x64,0x5C,0xEE,0x13,0xDB,0xD7,0xC4,0x5A,0x43,0xA0,0x02,0x7C,0x0C,0xB8,0xD0,0xC5,0xBD,0x10,0x30,0x6C,0x2F,0x3B,0x43,0xC0,0xCE,0x43,0x72,0x63,0x93,0x38,0x96,0xEA,0xF4,0x54,0x16,0x42,0x2B,0x82,0xB7,0x2A,0x10,0xE3,0xC0,0xAB,0x02,0x0E,0xFC,0xAB,0xBB,0x6E,0x96,0x45,0x92,0x24,0xB8,0x0C,0x75,0x53,0x9B,0xAC,0x84,0x01,0x4C,0xAD,0xD9,0x28,0x93,0x0B,0xEA,0x0A,0x98,0x21,0xC6,0x20,0x3B,0x85,0xFA,0x32,0x51,0x31,0x19,0x14,0x55,0x09,0xB8,0xCA,0x23,0xDE,0xF7,0x69,0x99,0x30,0xD2,0x26,0x20,0xE0,0xE3,0xF9,0xDF,0x27,0x89,0x64,0x9A,0x55,0x23,0xE0,0x9A,0xCF,0xA7,0x4F,0xD4,0xA9,0x67,0xCB,0x0A,0x65,0xEC,0x9A,0xA6,0xCE,0x95,0x72,0x0B,0xB1,0x9F,0x2A,0xFE,0x7F,0xDB,0x07,0x4D,0x05,0xC4,0xFB,0xDB,0x5A,0x72,0x25,0x79,0xA0,0x46,0x60,0x4B,0xA1,0x53,0x38,0x66,0x27,0x09,0xC8,0x2C,0xB2,0xD7,0x94,0xC7,0x2B,0xCE,0x9D,0x53,0xB4,0xB7,0x4D,0xEC,0x5F,0xAE,0x16,0x85,0xE1,0xB4,0x85,0x2A,0xFC,0xC8,0xF8,0x52,0xB9,0xDC,0x75,0xB5,0xB7,0x07,0x63,0x47,0x06,0x59,0xAF,0x1F,0x36,0x1C,0x4E,0x73,0x18,0x4C,0x41,0xB8,0x59,0x69,0xBD,0xDE,0x30,0xD8,0xDA,0xC7,0x87,0xBF,0x98,0x6A,0xBB,0x4C,0xF9,0x07,0x41,0x01,0x65,0x87,0xD6,0x7E,0x5C,0x50,0xA0,0xB6,0xCB,0x94,0x7F,0x10,0x14,0x50,0x76,0x68,0xED,0xC7,0x75,0x5E,0x81,0x5F,0x54,0xF7,0x21,0x40,0xFE,0xB1,0x33,0x1A,0x00,0x00,0x00,0x00,0x49,0x45,0x4E,0x44,0xAE,0x42,0x60,0x82};
    return VZ_IMAGE(bytes);
}

@end
